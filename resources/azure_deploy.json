{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "osType": {
      "type": "string",
      "defaultValue": "Windows Server 2016",
      "allowedValues": [
        "Windows Server 2016",
        "RHEL 7"
      ],
      "metadata": {
        "description": "OS for Virtual Machine."
      }
    },
    "userName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 20,
      "metadata": {
        "description": "User Name for the Virtual Machine."
      }
    },
    "password": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 123,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Virtual Machine Size."
      }
    },
    "agentType": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Graphics"
      ],
      "metadata": {
        "description": "PCoIP Agent Type: Standard or Graphics."
      }
    },
    "registrationCode": {
      "type": "securestring",
      "minLength": 21,
      "metadata": {
        "description": "PCoIP Standard Agent License Registration Code."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base location of resources, such as templates and DSC modules, that the template depends on"
      }
    }
  },
  "variables": {
    "deploymentApiVersion": "2016-09-01",
    "namePrefix": "pcoip-agent",
    "resourceLoc": "[concat(parameters('_artifactsLocation'), '/resources/')]",
    "osConfigs": {
      "Windows Server 2016": {
        "rdPort": 3389,
        "extensionFile": "vm_pcoip_agent_dsc.json"
      },
      "RHEL 7": {
        "rdPort": 22,
        "extensionFile": "vm_pcoip_agent_linux_ext.json"
      }
    },
    "extensionFileUrl": "[concat(variables('resourceLoc'), variables('osConfigs')[parameters('osType')].extensionFile)]",
    "rdPort": "[variables('osConfigs')[parameters('osType')].rdPort]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "deployInfraVM",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('resourceLoc'), 'azure_deploy_infra_vm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "osType": {
            "value": "[parameters('osType')]"
          },
          "userName": {
            "value": "[parameters('userName')]"
          },
          "password": {
            "value": "[parameters('password')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "namePrefix": {
            "value": "[variables('namePrefix')]"
          },
          "rdPort": {
            "value": "[variables('rdPort')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "deployVmExt",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('extensionFileUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[reference('deployInfraVM').outputs.vmName.value]"
          },
          "registrationCode": {
            "value": "[parameters('registrationCode')]"
          },
          "agentType": {
            "value": "[parameters('agentType')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          }
        }
      }
    }
  ],

  "outputs": {
    "vm_fqdn": {
      "type": "string",
      "value": "[reference('deployInfraVM').outputs.vm_fqdn.value]"
    },
    "vmName": {
      "type": "string",
      "value": "[reference('deployInfraVM').outputs.vmName.value]"
    }
  }
}